/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { SpinContract, SpinContractInterface } from "../SpinContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "VerificationSucceeded",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "new_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_address",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "commitments",
        type: "uint256[3]",
      },
    ],
    name: "setVerifierImageCommitments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "proof",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "verify_instance",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "aux",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "instances",
        type: "uint256[][]",
      },
    ],
    name: "settleProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zk_image_commitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class SpinContract__factory {
  static readonly abi = _abi;
  static createInterface(): SpinContractInterface {
    return new Interface(_abi) as SpinContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SpinContract {
    return new Contract(address, _abi, runner) as unknown as SpinContract;
  }
}
